<?xml version="1.0" encoding="UTF-8"?>

<!-- 
  build.xml

  Mad Physicist JForm Project

  The MIT License (MIT)

  Copyright (c) 2013 by Joseph Fox-Rabinovitz

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
-->

<!--
  The main build file for the JForm project. Type "ant -projecthelp" for a
  listing of the available targets. The project build and documentation can be
  run with the "all" target. There are currently no test targets.


  Set the value of the "DEBUG" property near the top of this file to determine
  whether the library will be compiled in debug mode or not. The "DEBUG-test"
  property determines the same thing for the test classes. It is normally set
  to the same value as "DEBUG".

  Author:   Joseph Fox-Rabinovitz
  Version:  1.0.0.0, 12 Nov 2013
  Since:    1.0.0.0
-->

<project name="JForm" default="all" basedir=".">

    <description>Builds, documents and demos JForm.</description>

    <property name="DEBUG" value="true" />
    <property name="DEBUG-test" value="${DEBUG}" />

    <property file="build.properties" />

    <path id="dependencies">
        <pathelement location="${tools.jar.file}" />
    </path>

    <!-- Library Build Targets -->

    <target name="clean" depends="clean-compile,clean-doc,clean-jar"
            description="removes all build artifacts, including documentation">
        <delete dir="${build.dir}" />
        <delete dir="${dist.dir}" />
        <delete dir="${jar.dir}" />
    </target>

    <target name="compile"
            description="compiles the library source code into class files">
        <mkdir dir="${classes.dir}" />
        <javac classpathref="dependencies"
               srcdir="${src.dir}"
               destdir="${classes.dir}"
               excludes="**/package-info.java"
               includeantruntime="false"
               debug="${DEBUG}">
            <compilerarg value="-Xlint:all" />
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}" excludes="**/*.java"/>
        </copy>
    </target>

    <target name="clean-compile"
            description="removes all compiled library classes">
        <delete dir="${classes.dir}" />
    </target>

    <target name="jar" depends="compile"
            description="bundles the compiled classes into an executable jar file">
        <mkdir dir="${jar.dir}" />
        <jar destfile="${jar.file}"
             basedir="${classes.dir}"
             excludes="">
            <!--manifest>
                <attribute name="Main-Class" value="${demo.class}" />
            </manifest-->
        </jar>
    </target>

    <target name="clean-jar"
            description="Removes the library jar file">
        <delete file="${jar.file}" />
    </target>

    <target name="doc" depends="compile"
            description="creates javadoc documentation of the library classes">
        <mkdir dir="${doc.dir}" />
        <javadoc sourcepath="${src.dir}"
                 destdir="${doc.dir}"
                 classpath="${classes.dir}"
                 access="private"
                 encoding="UTF-8"
                 version="true"
                 author="true"
                 windowtitle="JForm Project - Library Developer Documentation"
                 source="1.7"
                 serialwarn="true"
                 use="true">
            <doctitle><![CDATA[JForm Project<br />API Specification]]></doctitle>
            <header><![CDATA[<b>JForm Project<br />Library</b>]]></header>
            <footer><![CDATA[<b>JForm Project<br />Library</b>]]></footer>
            <bottom><![CDATA[Copyright &copy; 2013 by Joseph Fox-Rabinovitz under the MIT License]]></bottom>
            <link href="http://docs.oracle.com/javase/7/docs/api/" offline="false" />
            <sourcepath location="${src.dir}" />
            <classpath>
                <path refid="dependencies" />
                <path location="${classes.dir}" />
            </classpath>
        </javadoc>
    </target>

    <target name="clean-doc" depends="clean-doc-jar"
            description="removes javadoc documentation of the the classes">
        <delete dir="${doc.dir}" />
    </target>

    <target name="doc-jar" depends="doc"
            description="packages the library javadoc into a jar file">
        <jar destfile="${doc.jar}"
             basedir="${doc.dir}"
             excludes="" />
    </target>

    <target name="clean-doc-jar"
            description="removes the packaged library javadoc">
        <delete file="${doc.jar}" />
    </target>

    <target name="src-jar"
            description="packages the library source code into a jar file">
        <jar destfile="${src.jar}"
             basedir="${src.dir}"
             excludes="" />
    </target>

    <target name="clean-src-jar"
            description="removes the packaged library source code">
        <delete file="${doc.jar}" />
    </target>

    <!-- Demo Run Targets -->

    <target name="run-demo" depends="jar"
            description="runs the demo application">
        <java fork="true" classname="${demo.class}">
            <classpath>
                <pathelement location="${jar.file}" />
                <path refid="dependencies" />
            </classpath>
        </java>
    </target>

    <!-- Meta-Targets -->

    <target name="rebuild" depends="clean-compile,clean-jar,jar"
            description="rebuilds the jar from scratch after a clean" />

    <target name="all" depends="clean,jar,doc-jar,src-jar"
            description="cleans the project and creates all build, distribution, source, and documentation artifacts" />

</project>

